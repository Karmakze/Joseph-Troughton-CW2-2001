openapi: 3.0.0
info:
  title: Trails API
  version: 1.0.0
  description: A RESTful API to manage trails for the Trails Application.

servers:
  - url: http://localhost:5000
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: app.verify_bearer_token  # Path to your verification function

  schemas:
    Trail:
      type: object
      required:
        - Trail_Name
        - Trail_Type
        - Trail_Difficulty
        - Trail_City_ID
      properties:
        Trail_Name:
          type: string
          description: Name of the trail.
        Trail_Description:
          type: string
          description: Description of the trail.
        Trail_Type:
          type: string
          description: Type of the trail (e.g., Loop, Linear).
        Trail_Difficulty:
          type: string
          description: Difficulty level of the trail (e.g., Easy, Medium, Hard).
        Trail_Distance:
          type: number
          format: float
          description: Distance of the trail in kilometers.
        Trail_Elevation_Gain:
          type: number
          format: float
          description: Elevation gain of the trail in meters.
        Trail_Length:
          type: integer
          description: Length of the trail in hours.
        Trail_Rating:
          type: number
          format: float
          description: Average rating of the trail (0 to 5 scale).
        Trail_City_ID:
          type: integer
          description: ID of the city where the trail is located.
        Trail_Creator:
          type: integer
          description: ID of the user who created the trail.


paths:
  /trails:
    get:
      summary: Retrieve all trails
      description: Returns a list of all trails.
      operationId: app.routes.get_trails
      responses:
        "200":
          description: A list of trails.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trail'
        "500":
          description: Server error.
    post:
      summary: Create a new trail
      description: Adds a new trail to the database.
      operationId: app.routes.add_trail
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trail'
            example:
              Trail_Name: "Dartmoor Hike"
              Trail_Description: "A scenic route through Dartmoor."
              Trail_Type: "Loop"
              Trail_Difficulty: "Medium"
              Trail_Distance: 10.5
              Trail_Elevation_Gain: 500.2
              Trail_Length: 5
              Trail_Rating: 4.8
              Trail_City_ID: 1
      responses:
        "201":
          description: Trail created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  Trail_ID:
                    type: integer
                example:
                  message: "Trail added successfully"
                  Trail_ID: 123
        "400":
          description: Invalid input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error_code:
                    type: string
                example:
                  message: "Invalid input format"
                  error_code: "400_INVALID_INPUT"
        "401":
          description: Unauthorized access.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error_code:
                    type: string
                example:
                  message: "Authentication required"
                  error_code: "401_UNAUTHORIZED"
        "409":
          description: Conflict error (e.g., duplicate resource).
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error_code:
                    type: string
                example:
                  message: "Trail name already exists"
                  error_code: "409_CONFLICT"
        "500":
          description: Server error.
  /trails/{trail_id}:
    put:
      summary: Update an existing trail
      description: Updates a trail with the given trail_id.
      operationId: app.routes.update_trail
      security:
        - bearerAuth: []
      parameters:
        - name: trail_id
          in: path
          required: true
          description: ID of the trail to update.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trail'
      responses:
        "200":
          description: Trail updated successfully.
        "400":
          description: Invalid input or trail_id not found.
        "403":
          description: Unauthorized access.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error_code:
                    type: string
                example:
                  message: "You are not the creator of this trail"
                  error_code: "403_FORBIDDEN"
        "404":
          description: Trail not found.
        "500":
          description: Server error.
    delete:
      summary: Delete a trail
      description: Deletes a trail with the given trail_id.
      operationId: app.routes.delete_trail
      security:
        - bearerAuth: []
      parameters:
        - name: trail_id
          in: path
          required: true
          description: ID of the trail to delete.
          schema:
            type: integer
      responses:
        "200":
          description: Trail deleted successfully.
        "403":
          description: Unauthorized access.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error_code:
                    type: string
                example:
                  message: "You are not the creator of this trail"
                  error_code: "403_FORBIDDEN"
        "404":
          description: Trail not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error_code:
                    type: string
                example:
                  message: "Trail not found"
                  error_code: "404_NOT_FOUND"
        "500":
          description: Server error.
  /login:
    post:
      summary: User login
      description: Authenticates a user with email and password.
      operationId: app.routes.login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email of the user.
                password:
                  type: string
                  description: The password of the user.
              required:
                - email
                - password
            example:
              email: "test_user"
              password: "test_password"
      responses:
        "200":
          description: Login successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
              example:
                message: "Login successful"
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "400":
          description: Invalid input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error_code:
                    type: string
              example:
                message: "Invalid input"
                error_code: "400_INVALID_INPUT"
        "401":
          description: Invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error_code:
                    type: string
              example:
                message: "Invalid credentials"
                error_code: "401_UNAUTHORIZED"
        "500":
          description: Authentication server error or unexpected response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error_code:
                    type: string
              example:
                message: "Authentication server error"
                error_code: "500_AUTH_SERVER_ERROR"


